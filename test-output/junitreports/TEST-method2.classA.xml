<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="30" hostname="X390" name="method2.classA" tests="33" failures="2" timestamp="2022-07-18T21:24:43 EDT" time="0.047" errors="0">
  <testcase name="TestNG3" time="0.003" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.002" classname="method2.classA">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at method2.classA.TestNG3(classA.java:20)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.002" classname="method2.classA">
    <failure type="java.lang.AssertionError" message="expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at method2.classA.TestNG2(classA.java:15)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.000" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG1" time="0.008" classname="method2.classA"/>
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.003" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.002" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.002" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.002" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG3" time="0.000" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG3" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG3 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
  <testcase name="TestNG2" time="0.001" classname="method2.classA">
    <skipped/>
  </testcase> <!-- TestNG2 -->
  <system-out/>
</testsuite> <!-- method2.classA -->
